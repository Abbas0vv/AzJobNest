@model EditProfileViewModel

@{
	ViewData["Title"] = "Complete Your Profile";
}

<div class="container-fluid py-5" style="background: linear-gradient(135deg, #4b6cb7, #663399, #00b4d8, #00ffff); min-height: 100vh;">
	<div class="row justify-content-center g-4">
		<!--Profile-->
		<div class="col-lg-3 col-xl-5">
			<div class="card profile-card shadow-lg mb-4">
				<div class="card-header bg-white border-bottom-0">
					<h4 class="mb-0 text-center">Complete Your Profile</h4>
				</div>
				<div class="profile-card-body p-4">
					<form method="post" enctype="multipart/form-data" asp-action="E">
						<!-- Profile Picture Section -->
						<div class="mb-4 text-center">
							<div class="position-relative d-inline-block">
								@if (Model.ProfilePicture is null)
								{
									<img id="profilePicturePreview" src="~/Client/images/DefaultProfilePicture.png"
										 class="rounded-circle" style="width: 150px; height: 150px; object-fit: cover; border: 3px solid #dee2e6;"
										 alt="Profile Picture">
								}
								else
								{
									<img id="profilePicturePreview" src="~/Uploads/ProfilePictures/@Model.ProfilePicture"
										 class="rounded-circle" style="width: 150px; height: 150px; object-fit: cover; border: 3px solid #dee2e6;"
										 alt="Profile Picture">
								}
								<label for="profilePictureUpload" class="btn btn-sm btn-primary position-absolute bottom-0 end-0 rounded-circle"
									   style="width: 40px; height: 40px; line-height: 40px;">
									<i class="fas fa-camera"></i>
								</label>
								<input type="file" id="profilePictureUpload" name="profilePictureFile"
									   class="d-none" accept="image/*" onchange="previewProfilePicture(this)">
							</div>
							<input type="hidden" asp-for="ProfilePicture" />
							<div class="mt-2">
								<small class="text-muted">Upload a profile picture (max 2MB)</small>
							</div>
						</div>

						<!-- Account Information Section -->
						<div class="mb-4">
							<h5 class="mb-3 border-bottom pb-2">Account Information</h5>
							<div class="mb-3">
								<label asp-for="UserName" class="form-label">Username</label>
								<input asp-for="UserName" class="form-control">
								<span asp-validation-for="UserName" class="text-danger small"></span>
							</div>
							<div class="mb-3">
								<label asp-for="Email" class="form-label">Email Address</label>
								<input asp-for="Email" type="email" class="form-control" value="@Model.Email" readonly style="color: grey; background-color: #f8f9fa;">
								<span asp-validation-for="Email" class="text-danger small"></span>
							</div>
						</div>

						<!-- Personal Information Section -->
						<div class="mb-4">
							<h5 class="mb-3 border-bottom pb-2">Personal Information</h5>
							<div class="row g-3">
								<div class="col-md-6">
									<div class="mb-3">
										<label asp-for="Name" class="form-label">First Name</label>
										<input asp-for="Name" class="form-control">
										<span asp-validation-for="Name" class="text-danger small"></span>
									</div>
								</div>

								<div class="col-md-6">
									<div class="mb-3">
										<label asp-for="MiddleName" class="form-label">Middle Name (Optional)</label>
										<input asp-for="MiddleName" class="form-control">
										<span asp-validation-for="MiddleName" class="text-danger small"></span>
									</div>
								</div>


								<div class="col-md-6">
									<div class="mb-3">
										<label asp-for="LastName" class="form-label">Last Name</label>
										<input asp-for="LastName" class="form-control">
										<span asp-validation-for="LastName" class="text-danger small"></span>
									</div>
								</div>
								<div class="col-md-6">
									<div class="mb-3">
										<label asp-for="PhoneNumber" class="form-label">Phone Number</label>
										<input asp-for="PhoneNumber" class="form-control" id="phoneNumberInput">
										<span asp-validation-for="PhoneNumber" class="text-danger small"></span>
									</div>
								</div>
								<div class="col-md-6">
									<div class="mb-3">
										<label asp-for="Gender" class="form-label">Gender (Optional)</label>
										<select asp-for="Gender" class="form-select" asp-items="Html.GetEnumSelectList<Gender>()">
											<option value="">Select Gender</option>
										</select>
										<span asp-validation-for="Gender" class="text-danger small"></span>
									</div>
								</div>
								<div class="col-md-6">
									<div class="mb-3">
										<label asp-for="BirthDate" class="form-label">Birth Date</label>
										<input asp-for="BirthDate" type="date" class="form-control">
										<span asp-validation-for="BirthDate" class="text-danger small"></span>
									</div>
								</div>
							</div>
						</div>

						<!-- Professional Links Section -->
						<div class="mb-4">
							<h5 class="mb-3 border-bottom pb-2">Professional Links</h5>
							<div class="row g-3">
								<div class="col-md-6">
									<div class="mb-3">
										<label asp-for="LinkedInUrl" class="form-label">LinkedIn Profile (Optional)</label>
										<input asp-for="LinkedInUrl" class="form-control">
										<span asp-validation-for="LinkedInUrl" class="text-danger small"></span>
										<small class="text-muted">Example: https://linkedin.com/in/yourname</small>
									</div>
								</div>
								<div class="col-md-6">
									<div class="mb-3">
										<label asp-for="GitHubUrl" class="form-label">GitHub Profile (Optional)</label>
										<input asp-for="GitHubUrl" class="form-control">
										<span asp-validation-for="GitHubUrl" class="text-danger small"></span>
										<small class="text-muted">Example: https://github.com/yourname</small>
									</div>
								</div>
							</div>
						</div>

						<!-- CV/Resume Section -->
						<div class="mb-4">
							<h5 class="mb-3 border-bottom pb-2">CV/Resume</h5>
							<div class="input-group">
								<input asp-for="CV" type="text" id="cvFileNameDisplay" class="form-control" readonly>
								<button class="btn btn-outline-primary" type="button" id="uploadCvBtn" style="border-color: #4b6cb7; color: #4b6cb7;">
									<i class="fas fa-upload me-1"></i> Upload
								</button>
								@if (!string.IsNullOrEmpty(Model.CV))
								{
									<a href="~/Uploads/Resumes/@Model.CV"
									   class="btn btn-outline-success"
									   target="_blank"
									   style="border-color: #28a745; color: #28a745;">
										<i class="fas fa-eye me-1"></i> View CV
									</a>
								}
							</div>
							<input type="file" id="cvUpload" name="CVFile" class="d-none" accept=".pdf,.doc,.docx">
							<span asp-validation-for="CV" class="text-danger small"></span>
							<small class="text-muted">Upload your CV (PDF or Word document, max 5MB)</small>
						</div>
						<!-- Submit Button -->
						<div class="d-grid mt-4">
							<button type="submit" class="btn btn-primary btn-lg py-3" style="background: linear-gradient(to right, #4b6cb7, #663399); border: none;">
								<i class="fas fa-save me-2"></i> Save Profile
							</button>
						</div>
					</form>
				</div>
			</div>
		</div>
		<!--Projects-->
		<div class="col-lg-3 col-xl-5">
			<div class="modal fade" id="addProjectModal" tabindex="-1" aria-labelledby="addProjectModalLabel" aria-hidden="true">
				<div class="modal-dialog">
					<div class="modal-content">
						<div class="modal-header">
							<h5 class="modal-title" id="addProjectModalLabel">Add New Project</h5>
							<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
						</div>
						<div class="modal-body">
							<form id="projectForm" method="post" asp-action="">
								<div class="mb-3">
									<label asp-for="Name" class="form-label">Project Name</label>
									<input asp-for="Name" type="text" class="form-control" id="projectName" required>
									<span asp-validation-for="Name" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="tDescription" class="form-label">Description (Optional)</label>
									<textarea asp-for="Description" class="form-control" id="projectDescription" rows="2"></textarea>
									<span asp-validation-for="Description" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="RepositoryUrl" class="form-label">Repository URL</label>
									<input asp-for="RepositoryUrl" type="url" class="form-control" id="repositoryUrl" required>
									<span asp-validation-for="RepositoryUrl" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="DeploymentUrl" class="form-label">Deployment URL (Optional)</label>
									<input asp-for="DeploymentUrl" type="url" class="form-control" id="deploymentUrl">
									<span asp-validation-for="DeploymentUrl" class="text-danger"></span>
								</div>
								<div class="mb-3">
									<label asp-for="Source" class="form-label">Source</label>
									<select asp-for="Source" class="form-select" id="projectSource" required>
										<option value="">Select Source</option>
										<option value="GitHub">GitHub</option>
										<option value="GitLab">GitLab</option>
										<option value="Bitbucket">Bitbucket</option>
										<option value="Other">Other</option>
									</select>
									<span asp-validation-for="Source" class="text-danger"></span>
								</div>
								<div class="modal-footer">
									<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
									<button type="submit" class="btn btn-primary" id="saveProjectBtn">Save Project</button>
								</div>
							</form>
						</div>
					</div>
				</div>
			</div>
			<div class="card projects-card shadow-lg mb-4">
				<div class="card-header bg-white border-bottom-0">
					<h4 class="mb-0">My Projects</h4>
				</div>
				<div class="card-body p-4">

					<div class="project-card mb-3 p-3 bg-light rounded">
						<h5>@Model.ProjectName</h5>
						@if (!string.IsNullOrEmpty(Model.ProjectDescription))
						{
							<p class="text-muted small">@Model.ProjectDescription</p>
						}
						<div class="d-flex justify-content-between align-items-center mt-2">
							@if (!string.IsNullOrEmpty(Model.RepositoryUrl))
							{
								<a href="@project.RepositoryUrl" target="_blank" class="btn btn-sm btn-outline-dark">
									<i class="fab fa-github"></i> Repository
								</a>
							}
							@if (!string.IsNullOrEmpty(Model.DeploymentUrl))
							{
								<a href="@project.DeploymentUrl" target="_blank" class="btn btn-sm btn-outline-primary">
									<i class="fas fa-external-link-alt"></i> View Live
								</a>
							}
						</div>
						@if (!string.IsNullOrEmpty(Model.ProjectSource))
						{
							<div class="mt-2">
								<small class="text-muted">Deploys from @Model.ProjectSource</small>
							</div>
						}
					</div>

					<div class="text-center py-4">
						<i class="fas fa-folder-open fa-3x text-muted mb-3"></i>
						<p class="text-muted">No projects added yet</p>
					</div>


					<!-- Add More Project button always visible -->
					<div class="text-center mt-4">
						<button class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#addProjectModal">
							<i class="fas fa-plus"></i> Add More Project
						</button>
					</div>
				</div>
			</div>
		</div>

	</div>
</div>
<script>
		document.addEventListener('DOMContentLoaded', function () {
		var addModal = document.getElementById('addProjectModal');

		addModal.addEventListener('show.bs.modal', function (event) {
			// Modal her açıldığında inputları temizle
			const form = addModal.querySelector('#projectForm');
			form.reset();
		});
	});

	document.addEventListener('DOMContentLoaded', function() {
		const phoneInput = document.getElementById('phoneNumberInput');
		const countryCode = '(+994) ';

		// Initialize with country code if empty
		if (!phoneInput.value) {
			phoneInput.value = countryCode;
		}

		// Prevent modification of country code
		phoneInput.addEventListener('keydown', function(e) {
			// If trying to delete the country code
			if (e.key === 'Backspace' && phoneInput.selectionStart <= countryCode.length) {
				e.preventDefault();
			}

			// If trying to type before country code
			if (phoneInput.selectionStart < countryCode.length && e.key !== 'ArrowLeft' && e.key !== 'ArrowRight') {
				phoneInput.setSelectionRange(countryCode.length, countryCode.length);
			}
		});

		// Ensure country code stays when input loses focus
		phoneInput.addEventListener('blur', function() {
			if (!phoneInput.value.startsWith(countryCode)) {
				phoneInput.value = countryCode + phoneInput.value.replace(/^\(\+994\)\s*/g, '');
			}
		});

		// Format the number as user types
		phoneInput.addEventListener('input', function() {
			// Get the value without country code
			let value = phoneInput.value.substring(countryCode.length);

			// Remove all non-digit characters
			value = value.replace(/\D/g, '');

			// Format the remaining digits
			let formattedValue = '';
			if (value.length > 0) {
				formattedValue = value.substring(0, 2);
				if (value.length > 2) {
					formattedValue += '-' + value.substring(2, 5);
				}
				if (value.length > 5) {
					formattedValue += '-' + value.substring(5, 7);
				}
				if (value.length > 7) {
					formattedValue += '-' + value.substring(7, 9);
				}
			}

			// Set the formatted value with country code
			phoneInput.value = countryCode + formattedValue;
		});
	});
		document.addEventListener('DOMContentLoaded', function() {
		const checkbox = document.getElementById('hasMiddleNameCheckbox');
		const middleNameSection = document.querySelector('.middle-name-section');
		const middleNameInput = document.querySelector('input[name="MiddleName"]');

		// Initialize based on existing value
		if (middleNameInput && middleNameInput.value) {
			checkbox.checked = true;
			middleNameSection.style.display = 'block';
		}

		// Toggle visibility
		checkbox.addEventListener('change', function() {
			if (this.checked) {
				middleNameSection.style.display = 'block';
			} else {
				middleNameSection.style.display = 'none';
				if (middleNameInput) {
					middleNameInput.value = '';
				}
			}
		});
	});
		// Check for success message and show toast
	document.addEventListener('DOMContentLoaded', function() {
		// Check if there's a success message from the server
		const successMessage = '@(TempData["SuccessMessage"]?.ToString())';

		if (successMessage) {
			showSuccessToast(successMessage);
		}
	});

	function showSuccessToast(message) {
		// Create toast element
		const toast = document.createElement('div');
		toast.className = 'toast show align-items-center text-white bg-success';
		toast.style.position = 'fixed';
		toast.style.bottom = '20px';
		toast.style.right = '20px';
		toast.style.zIndex = '9999';
		toast.setAttribute('role', 'alert');
		toast.setAttribute('aria-live', 'assertive');
		toast.setAttribute('aria-atomic', 'true');

		toast.innerHTML = `
			<div class="d-flex">
				<div class="toast-body">
					<i class="fas fa-check-circle me-2"></i> ${message}
				</div>
				<button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
			</div>
		`;

		document.body.appendChild(toast);

		// Auto-remove after 5 seconds
		setTimeout(() => {
			toast.classList.remove('show');
			setTimeout(() => toast.remove(), 300);
		}, 5000);

		// Also allow manual close
		toast.querySelector('.btn-close').addEventListener('click', () => {
			toast.classList.remove('show');
			setTimeout(() => toast.remove(), 300);
		});
	}
		document.addEventListener('DOMContentLoaded', function() {
		// Handle project form submission
		document.getElementById('saveProjectBtn').addEventListener('click', function() {
			const project = {
				name: document.getElementById('projectName').value,
				description: document.getElementById('projectDescription').value,
				repositoryUrl: document.getElementById('repositoryUrl').value,
				deploymentUrl: document.getElementById('deploymentUrl').value,
				source: document.getElementById('projectSource').value
			};

			// Here you would typically make an AJAX call to save the project
			// For now, we'll just add it to the UI
			addProjectToUI(project);

			// Hide the modal
			const modal = bootstrap.Modal.getInstance(document.getElementById('addProjectModal'));
			modal.hide();
		});

		function addProjectToUI(project) {
			const projectsContainer = document.querySelector('.card-body .project-card:first-child')?.parentElement ||
									document.querySelector('.card-body');

			// Remove the "no projects" message if it exists
			const noProjectsDiv = document.querySelector('.text-center.py-4');
			if (noProjectsDiv) {
				noProjectsDiv.remove();
			}

			const projectHtml = `
				<div class="project-card mb-3 p-3 bg-light rounded">
					<h5>${project.name}</h5>
					${project.description ? `<p class="text-muted small">${project.description}</p>` : ''}
					<div class="d-flex justify-content-between align-items-center mt-2">
						${project.repositoryUrl ?
							`<a href="${project.repositoryUrl}" target="_blank" class="btn btn-sm btn-outline-dark">
								<i class="fab fa-github"></i> Repository
							</a>` : ''}
						${project.deploymentUrl ?
							`<a href="${project.deploymentUrl}" target="_blank" class="btn btn-sm btn-outline-primary">
								<i class="fas fa-external-link-alt"></i> View Live
							</a>` : ''}
					</div>
					${project.source ?
						`<div class="mt-2">
							<small class="text-muted">Deploys from ${project.source}</small>
						</div>` : ''}
				</div>
			`;

			projectsContainer.insertAdjacentHTML('afterbegin', projectHtml);
		}
	});
		function previewProfilePicture(input) {
		if (input.files && input.files[0]) {
			const reader = new FileReader();
			reader.onload = function (e) {
				document.getElementById('profilePicturePreview').src = e.target.result;
			};
			reader.readAsDataURL(input.files[0]);
		}
	}
		document.getElementById('uploadCvBtn').addEventListener('click', function () {
		document.getElementById('cvUpload').click();
	});

	document.getElementById('cvUpload').addEventListener('change', function () {
		const fileName = this.files[0] ? this.files[0].name : '';
		document.getElementById('cvFileNameDisplay').value = fileName;
	});

</script>